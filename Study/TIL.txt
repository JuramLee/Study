* 이미지 업로드
    <input/>에 type="file" 속성을 주면 파일 업로드가 된다.
    그냥 input 태그만 사용할 경우 파일명만 리스트로 보이게 된다.
    
    이 때 <label/>에 input태그와 동일한 id 값을 주면 그 label로 감싸져 있는 영역자체가 input태그의 기능을 하게 된다.
    사진 업로드의 경우 미리보기를 하고 싶다면 해당 파일을 state에 담아 뿌려주면된다.
    업로드된 이미지들을 상대주소로 바꿔야 img태그의 src로 설정이 가능한 데, 이 때 사용하는 방법에는 URL.createObjectURL() 혹은 FileReader()가 있다.

    두개의 차이는 일부 랜더링 속도나 메모리 측면에서 있고 큰 차이는 없다.

   `url = URL.createObjectURL(TARGET);
    const reader = new FileReader();
   `reader.readAsDataURL(TARGET);
    reader.onload = () => {
        파일이 업로드 되었을 때 실행할 코드
    };

    => 내가 실수한 부분
        업로드된 파일들의 반환값인 fileList가 배열이 아니라 객체인 점을 놓쳤다.
        키 값이 0,1,2... 등으로 되어있어서 배열의 index인 줄 알았다.

        유사 배열로 일반적인 배열에서 돌아가는 반복문은 안돌아감.
        Array.from(유사배열객체) : 유사배열 객체나 반복이 가능한 객체를 얕게 복사하여 새로운 배열을 만드는 메소드

        따라서 여러개를 한꺼번에 요청보낼 때엔 fileList에 담기는 객체들을 배열에 담아 반복문으로 모두 요청을 보냈어야 했다..
        하나의 경우 객체의 0번째 값으로 접근가능
        

        https://www.google.com/search?q=formdata+%EC%9D%B4%EB%AF%B8%EC%A7%80+%EC%97%AC%EB%9F%AC%EC%9E%A5&rlz=1C5CHFA_enKR1016KR1016&oq=f&aqs=chrome.0.69i59l3j69i57j0i67i650l2j0i131i433i512j46i131i199i340i433i465i512j46i131i199i433i465i512j0i131i433i512.618j0j15&sourceid=chrome&ie=UTF-8

        https://dev-elop.tistory.com/entry/%ED%8C%8C%EC%9D%BC-%EB%B0%B0%EC%97%B4-FormData-%EC%B2%98%EB%A6%AC

        https://velog.io/@wony_yoon/Axios%EB%A1%9C-formData-%EC%9D%B4%EC%9A%A9%ED%95%B4-file-%EC%98%AC%EB%A6%AC%EA%B8%B0

        https://velog.io/@iameunyu/react-%EC%9D%B4%EB%AF%B8%EC%A7%80-%EC%97%85%EB%A1%9C%EB%93%9C-%EB%B0%8F-%EC%82%AD%EC%A0%9C

* string으로 넘길 때 join()써서 넘기는 방식
    (괄호)안에 아무 조건을 넣지 않으면 ','로 이어진다