웹 브라우저 주소창에 URL을 입력하면 일어나는 일?
	URI는 식별자 URL은 위치지정자

	웹 개발자 기준
		주소를 입력하면 (URL || URI -> 둘의 차이는 나중에 알아보자) 일어나는 일
		중요한건 운영체제 window 기준으론 도메인 이름(URL)을 가지고
		naver.com 도메인에 속해있는 이름이 www인 컴퓨터의 인터넷 망에서 통신을 하기 위해서는 기본적으로 네이버의 IP주소를 알아야함
		따라서 DNS(분산형 DB구조, DDNS)에 질의를 가장 먼저 함
		=> res/reply에 따라 IP 주소를 획득
		하지만 매번 물어보기 보다 1가장먼저 hosts 파일에서 뭐라고 썻는지 찾는다. 없을 경우 2과거에 DNS에 질의했던 내용을 OS는 res를 캐싱한다. 캐시 결과를 보고 DNS에 안물어봄(유효기간이 중요)
		둘 다 없을 경우 3질의 함.
			질의를 할 때에도 두가지로 나뉜다. 1 집이어서 공유기 사용의 경우 PC의 네트워크 설정에 따라 공유기가 DNS에게 질의하고 res를 공유기가 받는다.
			따로 네트워크에서 DNS설정을 하지 않았을 경우 ISP에서 전ㄴ달하는 DNS 설정을 사용하여 DNS에 직접 질의
		4IP획득!
		5획득한 주소를 가지고 PC에서 IP(Server)로 TCP연결을 한다.( http통신할거기 때문에 -> http 통신은 TCP기반으로 하는것 )
		6TCP연결이 성공하면 http request가 나간다. 
		7 그에 따른 res가 온다


	리다이렉트, 캐싱, DNS, IP라우팅, TCP 연결 구축을 거쳐 요청 응답이 일어나는 TTFB(Time to First Byte)가 시작되고
	이 후 컨텐츠를 다운받게 되고 이후 브라우저 랜더링 과정을 거쳐 네이버라는 화면이 나타난다.

	>리다이렉트가 있으면 리다이렉트가 진행되고 없다면 그대로 해당 요청에 대한 과정 진행 

	>캐싱: 해당 요청이 캐싱이 가능한지 여부를 파악하고, 이미 캐싱된 요청이라면 캐싱된 값 반환, 새로운 요청이라면 그다음 단계로 간다
		캐싱은 요청된 값의 결과값을 저장하고 재요청오면 다시 제공하는 기술. 브라우저 캐시와 공유 캐시로 나뉜다.
			공유 캐시 : 클라이언트와 서버 사이에 있으며 사용자간에 공유할 수 있는 응답을 저장할수있다. 예로 요청한 서버 앞단에 프록시 서버가 캐싱하는것. 이를 리버스 프록시를 둬서 내부 서버로 포워드한다고도 말한다.
			브라우저 캐시 : 쿠키, 로컬, 세션스토리지 등을 포함한 캐시. 개인 캐시(private cache)라고도 한다. 브라우저 자체가 사용자가 http를 통해 다운로듷 ㅏ는 모든 문서를 보유하는것. 예를 들어 들어간 사이트를 새로고침하면 굉장히 빠르게 컨텐츠가 보임
			OS캐시(운영체제 안에 있는 ㅐㅋ시)
			라우터 캐시
			ISP캐시 (여기에도 없다면 ISP의 DNS 서버에다가 DNS 쿼리를 보내야한ㄴ다.)

	>DNS : Domain Name System은 계층적인 도메인 구조와 분산된 데이터 베이스를 이용한 시스템으로 FQDN을 인터넷 프로토콜인 IP로 바꿔주는 시스템.
		   이는 DNS관련 요청을 네임서버로 전달하고 해당 응답값을 클라이언트에게 전달하는 resolver, 도메인을 IP로 변환하는 네임서버 등으로 이뤄져있다
		   	FQDN : Fully Qualified Domain Name은 호스트와 도메인이 합쳐진 완전한 도메인 이름을 말한다. www가 호스트 naver.com이 도메인
			DNS캐싱 : 미리 해당 도메인 이름을 요청했다면 로컬 PC에 자동적으로 저장되고, 브라우저 캐싱과 OS캐싱이 있다.
	
	>IP라우팅 : 해당 IP를 기반으로 라우팅, ARP과정을 거쳐 실제 서버를 찾음

	>TCP연결 구축 : 브라우저가 TCP 3웨이-핸드셰이크 및 SSL연결(https를 사용한ㄴ다면) 등을 통해 연결을 설정. 이후 요청을 보낸 후 드디어 해당 요청한 서버로부터 응답을 받음
			TCP연결은 http/2까지 일어나고 http/3은 TCP연결이 아닌 QUIC연결이 일어남
			TCP연결 하는중, firewall과 https나 SSL이라고 하는 접근 제한방법이 있다. 
			이 후 로드밸런서를 통해 놀고잇는 서버에 요청을 ㅗㅂ냄

	>컨텐츠 다운로드 : 요청한 컨텐츠를 서버로부터 다운받음
			처음부터 요청하여 다운로드 받기 시작할때까지를 TTFB라고 한다.

	>브라우저 랜더링 : 받은 데이터를 바탕으로 브라우저 엔진이 브라우저 랜더링 과정을 거쳐 화면을 만든다.
	

------------여기까지가 신입의 대답-----------------------

대대기업 정도 네이버 구글정도면 GSLB를 하게 되어있다.
	적용 방법은 여러개 잇찌만 또 딸려나오는게 CDN 서비스 이용

	CDN을 사용하는 이유?
	GSLB를 구현하는데 구현할 때 DNS를 가지고 하는게 가장 쉬운 방법 하지만 GSLC+B를 햇다고는 안하고
	DNS 작동하는 역할을 하는 시스템을 만든ㄴ다. 그냥 작동하는ㄱ네 아니라 health check를 한다.


https://www.youtube.com/watch?v=0Oqkw8wVY_c
https://www.youtube.com/watch?v=GAyZ_QgYYYo
https://www.youtube.com/watch?v=YahjHM9UNCA
https://brunch.co.kr/@seungjoonlernnx/100
https://velog.io/@sylagape1231/%EC%A3%BC%EC%86%8C%EC%B0%BD%EC%97%90-naver.com%EC%9D%84-%EC%B9%98%EB%A9%B4-%EC%9D%BC%EC%96%B4%EB%82%98%EB%8A%94-%EC%9D%BC%EC%9D%84-%EC%89%BD%EA%B2%8C-%EC%9D%B4%ED%95%B4%ED%95%B4%EB%B3%B4%EC%9E%90