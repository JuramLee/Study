app 폴더 하위
	page.js
		메인 페이지
	layout.js
		page.js 파일을 감싸는 페이지
		page.js 내용을 layout.js 파일 안에서 children으로 받는다.
		head태그 안에 내용이나, 상단메뉴 등을 넣으면 된다.
	xxx.module.css
		특정 페이지에만 적용 가능한 css

api 폴더 하위
	api 폴더는 서버 기능 만드는 곳

===========================================================

SSR 기술쪽을 API Route 라고 한다.

.env 파일을 설정할 땐 
	NEXT_PUBLIC_이라는 접두사를 적어야하고, 사용할 땐 리액트와 동일하게 precess.env.이름으로 사용하면됨


사이트 탭 명과 설명(description)은 metadata로 변경이 가능하고, 이는 SSR 사용법이다.
	
===========================================================

next.js는 별다른 조치를 취하지 않으면 SSR로 인식한다.
이때에는 CSR의 hooks나 다른 기능들은 사용하지 못한다. 

사용자와 상호작용이 필요한 경우는 CSR이다보니(예. onSubmit)
최상단에 "use client"를 적어야 한다.

CSR일 때만 사용할 수 있는 useRouter();

UI를 만들 때는 export default 함수명 해줘야한다.

Router
	import {useRouter} from 'next/router'; // next12버전 page/router 방식
	import {useRouter} from 'next/navigation'; // next13버전 app/router 방식

	const router = useRouter();
	const id = Number(router.query.id);
  * Redirection 시키기 위해서는 router.push(주소)

	또한 url에 path를 설정했으면 / main일 때는 src/app/page.js가 오고
	만약 url에 path가 /create이면 src/app/create/page.js가 온다 (약속된 사항)
	그리고 url과 일치하는 폴더를 찾으면 가장 가까운 layout.js를 거슬러 올라가며 찾아서 거기서 랜더링 된다.
	찾은 layout.js가 app에 있는 파일이 아니라 해당 폴더 내에 있다면 해당 layout.js는 아래와 같이 사용되야한다.

		export default function Layout(props) {
			// 이 예시처럼 props로 받아야하고, props.children으로 사용해야한다.
			return (
				<>
					<div>{props.children}</div>
				</>
			)
		}

Dynamic route
	만약 url 경로가 id 나 기타 세그먼트가 온다? 그러면 다음과 같이 만들어야 함
	http://localhost:3000/read/1
	폴더는 src/app 아래 경로 이름과 동일한 폴더를 만들고(read폴더가 만들어지고), 세그먼트의 key로 사용할 내용과 동일한 이름의 폴더를 만든다(여기서는 id라고 치면)
	src/app/read/[id]라는 폴더가 생성되고, 그 폴더 안에 page.js 파일을 만들어야한다.
	또한params 값인 1을 가지고와서 사용하기 위해서는 

		export default function Layout(props) {
			// props.children.여기는 폴더 명으로 사용했던 즉, 세그먼트의 키값으로 접근하면 된다.
			return (
				<>
					<div>parameter : {props.params.id}</div>
				</>
			)
		}


SSR과 방문기록이 있는 페이지의 리소스는 다시 다운받지 않는 방법
	a태그를 Link 태그로 바꾼다 (import Link from 'next/link')
		1. 그러면 마우스가 hover 되었을 때 이미 리소스를 다운 받아놓고 클릭하면 바로 보여줌
		2. 또한 한번 방문한 페이지의 리소스는 다시 불러들이지 않는다.

public 리소스 사용법
	"/파일명.png"

	
Cache
	MISS : 캐싱된 데이터가 없어서 요청함
	HIT : 캐싱된 데이터를 사용했다