    TYPESCRIPT 공부
----------------------------------------------------------------------------------------

  파일 생성
      npx create-react-app 파일명 --typescript -> 얘는 안되는듯
    * npx create-react-app 파일명 --template typescript

  .ts vs .tsx
    .ts파일은 pure typescript 파일. javascript에서 .js에 대응한다고 생각하면 편하다
    .tsx는 typescript의 react문법을 담아내기 위한 확장자. .jsx에 대응한다고 생각하면 편하다.


리액트에서의 타입스크립트
  tsconfig.json에 es6추가, lib에도 추가, module은 'esnext'

  JSX를 리턴하는 컴포넌트의 리턴타입은 React.FC 이다.
  화살표 함수의 리턴 타입은 이름 뒤에 쓴다.
  보통
    const Temp:React.FC<props의 타입> = (props) => {
      ...
    }

    props로 전달하는게 변수다? => 그러면 타입을 지정해주는데 매개변수로 넘기는 변수이름:타입
    props로 전달하는게 함수다? => 그러면 타입을 지정해주는데 매개변수로 넘기는 함수이름(매개변수명:매개변수타입):리턴타입

    interface OwnProps {
      info:Restaurant,
      changeAddress(address:Address):void
    }

    const Store:React.FC<OwnProps> = ({info, changeAddress}) => {
      return (
        JSX
      )
    }


  컴포넌트 파일 만들고 'rafce'를 입력하면 파일명과 동일한 기본구조 만들어줌.
  => extension중 하나 ES7+ React/Redux/React-Native snippets

  보통 타입을 만들 땐 model이라는 폴더를 만들어서 관리한다.

  useState<제네릭타입>(초기값)

  type alias 쓸때 타입 설정 값 중 일부만 없애고 싶다면 ? 말고 Omit을 사용할 수 있다.
    type Temp1 = Omit<어디서, '무엇을'> 하면 해당 값을 빼고 나머지만 가지고 올 수 있다.

  type alias 쓸때 타입 설정 값 중 일부만 가지고 싶다면 Pick을 사용할 수 있다.
    type Temp1 = PIck<어디서, '무엇을'> 하면 해당 값만 가지고 올 수 있다.

  ?로 있어도 되고 없어도 되고할 때에는 타입검사를 안하기 때문에 주의해서 사용하자

  API res를 타입으로 할때!!
    

----------------------------------------------------------------------------------------

타입스크립트란?
  동적 언어인 자바스크립트에서 타입이 추가된 타입이 있는 자바스크립트의 상위 집합

자바스크립트로 컴파일 : tsc 파일명.ts

현재 에러가 나서 실행이 안됨.. 이방법 저방법 시도중..
  에러 내용은 아래 
  ts-node : 'ts-node' 용어가 cmdlet, 함수, 스크립트 파일 또는 실행할 수 있는 프로그램 이름으로 인식되지 않습니다. 이름이 정확한지 확인하고 경로가 포함된 경우  
  경로가 올바른지 검증한 다음 다시 시도하십시오.


실행 방법
  1. tsc 파일명.ts 후 node 파일명.js
  2. ts-node로 실행 (설치 없이 npx로 실행 가능)