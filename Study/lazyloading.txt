lazy loading, code splitting. suspense, automatic batching

lazy loading
    공부하기 전에는 skeleton UI를 위한 suspense의 또다른 방법이 아닐까? 생각함
    lazy lets you defer loading component’s code until it is rendered for the first time.
    lazy loading이란?  (지연로딩)
    페이지를 불러오는 시점에 당장 필요하지 않은 리소스들을 추후에 로딩하게 하는 기술
    즉 필요로 하는 시점에 로딩하는 것을 의미한다.
    예시 : placeholder, 무한 스크롤

    장점 : 
    사용자가 처음 웹사이트에 접근할 때 리소스의 일부만 다운로드되기 때문에 컨텐츠의 제공 속도가 빠르다. 
    성능이 향상된다.
    컨텐츠가 지속적으로 공급되기 떄문에 사용자가 웹사이트 이탈 확률이 낮아진다.
    사용자가 필요로 하는 경우에만 컨텐츠를 불러오기 때문에 배터리 시간 시스템 부담등이 낮아진다. 즉 비용 감소

    React.lazy란?
    리액트에서 컴포넌트 파일을 코드의 최상단에 import로 정의하고 동적으로 불러오기를 사용하면 에러가 발생한다.
    동적으로 불러오기 위해서는 React.lazy()를 사용해야한다. 
    React.lazy()는 import() 구문을 반환하는 콜백함수를 인자로 받는다.
    const About = React.lazy(() => import('./About'));
    동적으로 불러오는 컴포넌트 파일에는 반드시 지켜야하는 2가지 규칙이 있다.
    1. React 컴포넌트를 포함해야한다
    2. default export를 가진 컴포넌트여야 한다.

    React 공식 문서에 따르면 router 바로 아래 suspense를 위치시키고, route로 보여줄 컴포넌트들을 React.lazy()로 
    불러오는 것을 권장한다.

    다른 컴포넌트 혹은 함수 안에 lazy를 선언하지 말고 항상 최상위 수준에서 선언해라


lazy 컴포넌트는 suspense 컴포넌트 하위에서 랜더링되어야한다. 따라서 suspense 컴포넌트로 lazy 컴포넌트를 감쌌고
suspense 의 fallback prop으로 컴포넌트가 로드될 때까지 보여줄 걸 지정하면 된다.
    
    https://react.dev/reference/react/lazy#lazy
    https://web.dev/reduce-javascript-payloads-with-code-splitting/
    https://itprogramming119.tistory.com/entry/React-Reactlazy%EB%9E%80
    https://velog.io/@vagabondms/%EA%B8%B0%EC%88%A0-%EC%8A%A4%ED%84%B0%EB%94%94-Lazy-loading%EC%9D%B4%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80

--------------------------------------------------------------------------------------

code splitting
    