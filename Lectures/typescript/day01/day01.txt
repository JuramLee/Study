
타입스크립트

자바스크립트는 타입이 정해져있는 언어? (정적타입, 동적타입)
	자바스크립트는 동적 타입언어. 컴파일 시에 값에 따라 타입이 추론되는 형태

동적 타입 언어의 장/단점
	장점)
		개발 속도가 빠르다
		이 외에도 많지만 추후에 다룰 예정

	단점)
		컴파일이 아닌 런타임 시에 타입이 정해지기 때문에 에러 상황을 예측하기 힘들고

		ex:
			function add (num, num2) {
				return num + num2
			}

			경우 매개변수에 숫자가 아닌 객체가 들어간다면 실행시키기 전까진 에러 표시X

	=> 결과적으로 타입스크립트는 동적 타입 언어인 자바스크립트를 정적 타입 언어로 바꾸고
	   코드의 안정성을 높이고 개발자는 이 안정적인 환경에서 개발할 수 있게 된다.

	
타입스크립트는 자바스크립트의 슈퍼셋(자바스크립트를 포함하고 추가 기능 가능하게 하는 개념)
따입스크립트(ttypescript - 타입스크립트의 슈퍼셋)

------------------------------------------------------------------------------------------------------------

타입스크립트 사용하는 이유
	1) 동적 타입 언어인 자바스크립트 -> 정적 타입 언어
	   런타임이 아닌 컴파일 과정에서 개발자가 코드를 작성하는 동안 예상치 못한 오류를 쉽게 찾을 수 있게함
	   안정성 상승
	   => 하지만 개발 속도가 느려 큰 프로젝트에 사용 권장

	2) 코드 가독성이 좋아진다 (코드의 문서화)
		type temp = {
			name: string,
			age: number,
			height: number
		}

		let temp = {
			name: '이름',
			age: 18,
			height: 180
		}

		...

		const onClick = (person: temp) => {
			...
		}

	3) 생산성 + 유지보수 증가
		const onClick = (person) => {
			person.하면 안나옴
			...
		}

		const onClick = (person: temp) => {
			person.하면 자동완성 리스트 뜸
			...
		}

------------------------------------------------------------------------------------------------------------

타입스크립트의 기본타입
	number
	string
	boolean
	null
	undefine
	any
	unknown
	bigint
	symbol
	..


타입스크립트의 객체타입
	object
	Array
	Tuple


타입스크립트의 고급타입
  * interface
  * type alias
*** enum, as const
  * union
	intersection
	literal
	mapped type
  * conditional type
	indexed access type
	typeof
 ** partial
	required
  * readonly
 ** pick
 ** omit
	exclude
	extract
  * nonullable
  * optional
*** returntype, generic
	instancetype

------------------------------------------------------------------------------------------------------------

.ts 파일을 실행시키는 방법
	1. tsc 파일명.ts -> js로 컴파일(js파일 생성되면) -> node 파일명.js
	2. npx ts-node 파일명(ts생략)    // npx ts-node 1.type
	3. npx tsx 파일명  // npx tsx 1.type
	4. npx jiti 파일명.ts

------------------------------------------------------------------------------------------------------------

