
스택과 큐 (Stack & Queue)

    Stack
        스택은 LIFO(Last In First Out) 후입선출 자료 구조
        마지막으로 추가된 요소가 제일 먼저 나온다. (push, pop)

    Queue
        큐 역시 스택과 비슷한 자료구조 데이터를 추가하고 제거함
        하지만 FIFO자료구조 (First In First Out) 선입선출 자료구조


Garbage Collector 가비지 컬렉터(Java, Javascript)
    주소를 잃어버려서 정리되지 않은 메모리를 가비지라고 한다.
    또한 앞으로 사용하지 않는 객체 또한 포함된다.
    
    즉, 가비지 컬렉터는 이렇게 메모리를 차지하고 있는 가비지들을 수거하여 
    메모리에서 해체시키는 역할을 하는 프로그램

    ex)
    C++ 경우에는 사용하지 않는 메모리를 직접 해체
    하지만 java javascript의 경우 GC가 대신 처리해줘서 개발자 입장에선 엄청 편리하다

  * 주의
    모든 데이터를 전부 수거하는 것은 아니기 떄문에 메모리 누수에 대한 걱정이 완전히 배제되진 않음
    또한 프로그램에 의해 수거를 맡기기 때문에 그 성능도 완전히 기대하기 힘들고
    가비지 컬렉터는 지속적으로 메모리 누수가 있는지 확인하기 때문에 성능적으로도 기대하기 힘들다.

==========================================================================================

